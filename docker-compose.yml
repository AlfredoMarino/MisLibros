version: '3.3'
services:
  app:
    image: my-books
    build:
      context: ./
      dockerfile: dockerfile
    depends_on:
      - db
    ports:
      - '5000:8080'
    expose:
      - '5000'
    volumes:
      - /data/spring-boot-app

  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'aamv'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'aamv'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'aamv'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
# Names our volume
volumes:
  my-db:

# Tomar el jar y guardarlo en la imagen
# docker image build . -t my-books:latest

# ARRANCAR
# docker-compose up
# La ip del Host es 192.168.99.100

# ruta ejemplo http://192.168.99.100:5000/v1/pais

# crear base de datos
# cat documentacion/mislibros.sql | docker-compose exec -T db mysql -uaamv -paamv db

# mysql inline
# docker-compose exec -T db mysql -uaamv -paamv db <<< "INSERT INTO pais (nombre) VALUES ('PRUEBA')"
# docker-compose exec -T db mysql -uaamv -paamv db <<< "INSERT INTO estado (nombre, idpais) VALUES ('estado1', 1)"

# Compilar con maven sin correr las pruebas y no de el error de base de datos
# mvn clean install -DskipTests